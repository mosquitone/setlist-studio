generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")

}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  songs     Song[]
  setlists  Setlist[]
  
  @@map("users")
}

model Song {
  id       String @id @default(cuid())
  title    String
  artist   String?
  duration Int?    // duration in seconds
  key      String?
  tempo    Int?
  notes    String?
  
  userId   String
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("songs")
}

model Setlist {
  id          String @id @default(cuid())
  title       String
  bandName    String?
  eventName   String?
  eventDate   DateTime?
  openTime    String?
  startTime   String?
  theme       String?
  isPublic    Boolean @default(false)
  
  userId      String
  user        User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  items       SetlistItem[]
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("setlists")
}

model SetlistItem {
  id       String @id @default(cuid())
  title    String
  note     String?
  order    Int
  
  setlistId String
  setlist   Setlist @relation(fields: [setlistId], references: [id], onDelete: Cascade)
  
  @@unique([setlistId, order])
  @@map("setlist_items")
}

// セキュリティ関連テーブル（Vercel対応）

model RateLimitEntry {
  id        String   @id @default(cuid())
  key       String   @unique
  count     Int      @default(1)
  resetTime DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("rate_limit_entries")
  @@index([resetTime])
}

model SecurityEvent {
  id          String   @id @default(cuid())
  type        String
  severity    String
  timestamp   DateTime @default(now())
  userId      String?
  ipAddress   String?
  userAgent   String?
  resource    String?
  details     Json?
  
  @@map("security_events")
  @@index([timestamp])
  @@index([ipAddress])
  @@index([type])
  @@index([severity])
}

model ThreatActivity {
  id              String   @id @default(cuid())
  ipAddress       String
  activityType    String   // 'login_attempt', 'failed_login', 'rate_limit_hit'
  userId          String?
  userAgent       String?
  timestamp       DateTime @default(now())
  metadata        Json?
  
  @@map("threat_activities")
  @@index([ipAddress, timestamp])
  @@index([activityType])
  @@index([timestamp])
}